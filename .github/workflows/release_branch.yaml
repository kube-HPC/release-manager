# This is a basic workflow to help you get started with Actions

name: CI-CREATE_RELEASE_BRANCH

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  workflow_dispatch:
    inputs:
      BRANCH:
        description: branch name to create (e.g. release_v2.1)
        required: true
      VERSION:
        description: helm version to freeze in branch (e.g. v2.1.171)
        required: true
      VERSION_TYPE:
        description: version to increment (minor, major)
        required: true
        default: minor
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  VERSION: '${{ github.event.client_payload.VERSION || github.event.inputs.VERSION }}'
  BASE_FOLDER: '/tmp/source'
  RELEASE_BRANCH: '${{ github.event.client_payload.BRANCH || github.event.inputs.BRANCH }}'
  VERSION_TYPE: '${{ github.event.client_payload.VERSION_TYPE || github.event.inputs.VERSION_TYPE }}'
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/.checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - run: npm ci
      - name: get helm
        run: |
          curl -Lo /tmp/hkube-${VERSION}.tgz https://hkube.org/helm/dev/hkube-${VERSION}.tgz
          mkdir -p /tmp/hkube-$VERSION/
          tar xfv /tmp/hkube-${VERSION}.tgz -C /tmp/hkube-$VERSION/
          SYSTEM_VERSION=$(yq e '.fullSystemVersion' /tmp/hkube-$VERSION/hkube/values.yaml)
          echo SYSTEM_VERSION=$SYSTEM_VERSION >> $GITHUB_ENV
      - name: get version
        run: |
          curl -Lo version.json https://github.com/kube-HPC/release-manager/releases/download/${SYSTEM_VERSION}/version.json
          cat ./version.json
          export TAG=$(jq -r .fullSystemVersion ./version.json)
          echo TAG=$TAG >> $GITHUB_ENV
        env:
          GH_TOKEN: '${{ secrets.GH_TOKEN }}'
      - name: create branch
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          mkdir -p ${BASE_FOLDER}
          npm i -g lerna@3.18.3
          node scripts/create-branch-action.js
        env:
          GH_TOKEN: '${{ secrets.GH_TOKEN }}'
          
      
